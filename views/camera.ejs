<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, shrink-to-fit=no">
    <title>CameraHub - Camera</title>
    <link rel="icon" type="image/x-icon" href="/assets/img/favicon.ico"/>
    <!-- BEGIN GLOBAL MANDATORY STYLES -->
    <link href="https://fonts.googleapis.com/css?family=Quicksand:400,500,600,700&display=swap" rel="stylesheet">
    <link href="/bootstrap/css/bootstrap.min.css" rel="stylesheet" type="text/css"/>
    <link href="/assets/css/plugins.css" rel="stylesheet" type="text/css"/>
    <!-- END GLOBAL MANDATORY STYLES -->
    <!-- BEGIN PAGE LEVEL CUSTOM STYLES -->
    <link href="/assets/css/scrollspyNav.css" rel="stylesheet" type="text/css"/>
    <link rel="stylesheet" type="text/css" href="/assets/css/forms/theme-checkbox-radio.css">
    <link rel="stylesheet" type="text/css" href="/plugins/bootstrap-select/bootstrap-select.min.css">
    <link rel="stylesheet" type="text/css" href="/assets/css/forms/switches.css">
    <link rel="stylesheet" type="text/css" href="/plugins/table/datatable/datatables.css">
    <link rel="stylesheet" type="text/css" href="/plugins/table/datatable/dt-global_style.css">
    <link href="/assets/css/elements/avatar.css" rel="stylesheet" type="text/css"/>
    <!-- END PAGE LEVEL CUSTOM STYLES -->
</head>
<body class="sidebar-noneoverflow" data-spy="scroll" data-target="#navSection" data-offset="140">

<!--  BEGIN NAVBAR  -->
<!--<%- include partials/header.ejs %>-->
<!--  END NAVBAR  -->

<!--  BEGIN MAIN CONTAINER  -->
<div class="main-container" id="container">

    <div class="overlay"></div>
    <div class="cs-overlay"></div>
    <div class="search-overlay"></div>

    <!--  BEGIN SIDEBAR  -->
    <div class="sidebar-wrapper sidebar-theme" style="top: 0">
        <div class="text-center mt-3"><img src="/assets/img/logo.png" width=150 alt="logo"></div>
        <nav id="sidebar">

            <div class="shadow-bottom"></div>
            <ul class="list-unstyled menu-categories" id="accordionExample">
                <li class="menu">
                    <a href="/" aria-expanded="false" class="dropdown-toggle">
                        <div class="">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                 fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                 stroke-linejoin="round" class="feather feather-home">
                                <path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path>
                                <polyline points="9 22 9 12 15 12 15 22"></polyline>
                            </svg>
                            <span>Dashboard</span>
                        </div>
                    </a>
                </li>
                <hr>
                <li class="menu">
                    <a href="/office" aria-expanded="false" class="dropdown-toggle">
                        <div class="">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                 fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                 stroke-linejoin="round" class="feather feather-map-pin">
                                <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"></path>
                                <circle cx="12" cy="10" r="3"></circle>
                            </svg>
                            <span>Location</span>
                        </div>
                    </a>
                </li>
                <li class="menu active">
                    <a href="/camera" aria-expanded="true" class="dropdown-toggle">
                        <div class="">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                 fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                 stroke-linejoin="round" class="feather feather-video">
                                <polygon points="23 7 16 12 23 17 23 7"></polygon>
                                <rect x="1" y="5" width="15" height="14" rx="2" ry="2"></rect>
                            </svg>
                            <span>Camera</span>
                        </div>
                    </a>
                </li>
                <li class="menu">
                    <a href="/notification" aria-expanded="false" class="dropdown-toggle">
                        <div class="">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                 fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                 stroke-linejoin="round" class="feather feather-zap">
                                <polygon points="13 2 3 14 12 14 11 22 21 10 12 10 13 2"></polygon>
                            </svg>
                            <span>Alert</span>
                        </div>
                    </a>
                </li>
                <!--
               <li class="menu menu-heading">
                   <div class="heading">
                       <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"
                            stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                            class="feather feather-minus">
                           <line x1="5" y1="12" x2="19" y2="12"></line>
                       </svg>
                       <span>RULE DEFINITION</span></div>
               </li>
               <li class="menu">
                   <a href="/rule" aria-expanded="false" class="dropdown-toggle">
                       <div class="">
                           <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                stroke-linejoin="round" class="feather feather-box">
                               <path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"></path>
                               <polyline points="3.27 6.96 12 12.01 20.73 6.96"></polyline>
                               <line x1="12" y1="22.08" x2="12" y2="12"></line>
                           </svg>
                           <span>Rule</span>
                       </div>
                   </a>
               </li>
               -->
            </ul>
            <div class="profile-info">

                <div class="user-info" style="height: auto">
                    <div class="avatar avatar-xl">
                        <span class="avatar-title rounded-circle">AG</span>

                    </div>
                    <h6 class="">User Alpha</h6>
                    <a href="/user/logout" class="btn btn-outline-primary btn-sm">LOGOUT</a>
                </div>
            </div>
        </nav>
    </div>
    <!--  END SIDEBAR  -->

    <!--  BEGIN CONTENT AREA  -->
    <div id="content" class="main-content" style="margin-top:15px">

        <div class="layout-px-spacing">
            <blockquote class="blockquote">
                <h4>Camera Management</h4>
            </blockquote>
            <div class="row layout-top-spacing">
                <div id="tableCamera" class="col-lg-12 col-12 layout-spacing">
                    <div class="statbox widget box box-shadow">
                        <div class="widget-header">
                            <div class="row">
                                <div class="col-xl-12 col-md-12 col-sm-12 col-12">
                                    <h4>Camera List</h4>
                                </div>
                            </div>
                        </div>
                        <div class="widget-content widget-content-area">
                            <div class="table-responsive">
                                <% if (cameras && Object.keys(cameras).length > 0) { %>
                                    <table id="zero-config" class="table table-bordered table-hover mb-4">
                                        <thead>
                                        <tr>
                                            <th>Camera Preview</th>
                                            <th>Camera Name</th>
                                            <th>Installed Office</th>
                                            <th class="text-center">Status</th>
                                            <th></th>
                                        </tr>
                                        </thead>
                                        <tbody>
                                        <% cameras.forEach((camera, index) => { %>
                                            <tr>
                                                <td><img class="img responsive" src="/camera/<%= camera.cameraImage %>"
                                                         height="60"></td>
                                                <td><%= camera.cameraSN %></td>
                                                <!--<td><%= camera.cameraURL %></td>-->
                                                <td><%= camera.officeName %></td>
                                                <td class="text-center">
                                                    <% if(camera.cameraStatus === 1){ %><span
                                                            class="badge badge-success">Activated</span>
                                                    <% } else{ %><span class="badge badge-dark">Deactivated</span>
                                                    <% } %>
                                                </td>
                                                <td class="text-right">
                                                    <a href="/camera/active/<%= camera.cameraID %>"
                                                       class="btn btn-primary btn-sm">Set as Active</a>
                                                    <a href="/camera/deactivate/<%= camera.cameraID %>"
                                                       class="btn btn-secondary btn-sm">Set as Deactivate</a>
                                                    <a href="/camera/del/<%= camera.cameraID %>"
                                                       class="btn btn-danger btn-sm">Delete</a>
                                                </td>
                                            </tr>
                                        <% }) %>
                                        </tbody>
                                    </table>
                                <% } else { %>
                                    <div class="alert alert-danger mb-4" role="alert">
                                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                                 viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                                 stroke-linecap="round" stroke-linejoin="round"
                                                 class="feather feather-x close" data-dismiss="alert">
                                                <line x1="18" y1="6" x2="6" y2="18"></line>
                                                <line x1="6" y1="6" x2="18" y2="18"></line>
                                            </svg>
                                        </button>
                                        <strong>Error!</strong> No Camera Found.
                                    </div>
                                <% } %>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div id="cameraForm" class="col-lg-12 layout-spacing">
                    <div class="statbox widget box box-shadow">
                        <div class="widget-header">
                            <div class="row">
                                <div class="col-xl-12 col-md-12 col-sm-12 col-12">
                                    <h4>Adding a new Camera</h4>
                                </div>
                            </div>
                        </div>
                        <div class="widget-content widget-content-area">
                            <form method="post" action="/camera/add" enctype="multipart/form-data">
                                <div class="form-group row mb-4">
                                    <label for="cameraSN" class="col-xl-2 col-sm-3 col-sm-2 col-form-label">Camera
                                        Name</label>
                                    <div class="col-xl-10 col-lg-9 col-sm-10">
                                        <input type="text" class="form-control" id="cameraSN" name="cameraSN"
                                               placeholder="Serial Number of this Camera" required>
                                    </div>
                                </div>
                                <div class="form-group row mb-4">
                                    <label for="cameraFeed" class="col-xl-2 col-sm-3 col-sm-2 col-form-label">Feed
                                        URL</label>
                                    <div class="col-xl-10 col-lg-9 col-sm-10">
                                        <input type="text" class="form-control" id="cameraFeed" name="cameraFeed"
                                               placeholder="RTSP URL" required>
                                    </div>
                                </div>
                                <div class="form-group row mb-4">
                                    <label for="noticeMails" class="col-xl-2 col-sm-3 col-sm-2 col-form-label">Email
                                        Recipient</label>
                                    <div class="col-xl-10 col-lg-9 col-sm-10">
                                        <input type="text" class="form-control" id="noticeMails" name="noticeMails"
                                               placeholder="Email Address for receiving alert, Use comma (,) to Separate Multiple Email Recipients"
                                               required>
                                    </div>
                                </div>
                                <div class="form-group row mb-4">
                                    <label for="cameraFeed" class="col-xl-2 col-sm-3 col-sm-2 col-form-label">Location
                                        Installed</label>
                                    <div class="col-xl-10 col-lg-9 col-sm-10">
                                        <select class="selectpicker" name="officeID">
                                            <% offices.forEach((office, index) => { %>
                                                <option value="<%= office.officeID %>"><%= office.officeName %></option>
                                            <% }) %>
                                        </select>
                                    </div>
                                </div>
                                <div class="form-group row mb-4">
                                    <label for="hatTrigger" class="col-xl-2 col-sm-3 col-sm-2 col-form-label">Detect
                                        Hat</label>
                                    <div class="col-xl-10 col-lg-9 col-sm-10">
                                        <label class="switch s-icons s-outline s-outline-success mt-2">
                                            <input type="checkbox" name="hatTrigger" id="hatTrigger" checked="">
                                            <span class="slider round"></span>
                                        </label>
                                    </div>
                                </div>
                                <div class="form-group row mb-4">
                                    <label for="vestTrigger" class="col-xl-2 col-sm-3 col-sm-2 col-form-label">Detect
                                        Vest</label>
                                    <div class="col-xl-10 col-lg-9 col-sm-10">
                                        <label class="switch s-icons s-outline s-outline-success mt-2">
                                            <input type="checkbox" name="vestTrigger" id="vestTrigger" checked="">
                                            <span class="slider round"></span>
                                        </label>
                                    </div>
                                </div>
                                <div class="form-group row mb-4">
                                    <label for="runningTrigger" class="col-xl-2 col-sm-3 col-sm-2 col-form-label">Detect
                                        Running</label>
                                    <div class="col-xl-10 col-lg-9 col-sm-10">
                                        <label class="switch s-icons s-outline s-outline-success mt-2">
                                            <input type="checkbox" name="runningTrigger" id="runningTrigger" checked="">
                                            <span class="slider round"></span>
                                        </label>
                                    </div>
                                </div>
                                <div class="form-group row mb-4">
                                    <label for="failingTrigger" class="col-xl-2 col-sm-3 col-sm-2 col-form-label">Detect
                                        Failing</label>
                                    <div class="col-xl-10 col-lg-9 col-sm-10">
                                        <label class="switch s-icons s-outline s-outline-success mt-2">
                                            <input type="checkbox" name="failingTrigger" id="failingTrigger" checked="">
                                            <span class="slider round"></span>
                                        </label>
                                    </div>
                                </div>
                                <div class="form-group row mb-4">
                                    <label for="zoneTrigger" class="col-xl-2 col-sm-3 col-sm-2 col-form-label">Detect
                                        Restricted Area</label>
                                    <div class="col-xl-10 col-lg-9 col-sm-10">
                                        <label class="switch s-icons s-outline s-outline-success mt-2">
                                            <input type="checkbox" name="zoneTrigger" id="zoneTrigger" checked="">
                                            <span class="slider round"></span>
                                        </label>
                                    </div>
                                </div>

                                <div class="form-group row mb-4">
                                    <div class="col-xl-12 col-lg-12 col-sm-12">
                                        <div class="custom-file-container" data-upload-id="myFirstImage">
                                            <label for="selectImage">Select Camera Preview Image (Single
                                                File)</label>
                                            <input type="file" class="form-control-file" id="selectImage"
                                                   name="selectImage"
                                                   accept=".jpg, .jpeg, .png">
                                            <canvas id="cameraCanvas" width="1024" height="576"
                                                    style="border:1px solid #d3d3d3;">
                                                Your browser does not support the HTML5 canvas tag.
                                            </canvas>
                                        </div>
                                    </div>
                                    <div class="col-xl-12 col-lg-12 col-sm-12">
                                        <p>Click the image to start drawing a polygon of detection area, click Red
                                            Dot again
                                            to finish polygon</p>
                                        <button class="btn btn-block btn-dark mb-2" type="button"
                                                onclick="clearCanvas()">Clear Selection
                                        </button>
                                        <textarea class="form-control" id="polygonPoints" name="polygonPoints"
                                                  rows="4"
                                                  readonly></textarea>
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <div class="col-sm-12">
                                        <button type="submit" class="btn btn-primary btn-block mt-3">Add new Camera</button>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <%- include partials/footer.ejs %>
    </div>
    <!--  END CONTENT AREA  -->

</div>
<!-- END MAIN CONTAINER -->

<!-- BEGIN GLOBAL MANDATORY SCRIPTS -->
<script src="/assets/js/libs/jquery-3.1.1.min.js"></script>
<script src="/bootstrap/js/popper.min.js"></script>
<script src="/bootstrap/js/bootstrap.min.js"></script>
<script src="/plugins/perfect-scrollbar/perfect-scrollbar.min.js"></script>
<script src="/assets/js/app.js"></script>

<script>
    $(document).ready(function () {
        App.init();
    });
</script>
<script src="/plugins/highlight/highlight.pack.js"></script>
<script src="/assets/js/custom.js"></script>
<!-- END GLOBAL MANDATORY SCRIPTS -->

<!-- BEGIN PAGE LEVEL CUSTOM SCRIPTS -->
<script src="/assets/js/scrollspyNav.js"></script>
<script src="/plugins/bootstrap-select/bootstrap-select.min.js"></script>
<script src="/plugins/table/datatable/datatables.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/fabric.js/4.3.1/fabric.min.js"
        integrity="sha512-ACqMrfAtm537AWzgx/xQ57JnFxXeq8RylQMGg4y/e6M2ew4Z8NycE8aId/Bt2ZE+w1gNsox3MgwxKl7SGMRdtA=="
        crossorigin="anonymous"></script>
<script>
    checkall('todoAll', 'todochkbox');
    $('[data-toggle="tooltip"]').tooltip()
</script>
<script>
    $('#zero-config').DataTable({
        "oLanguage": {
            "oPaginate": {
                "sPrevious": '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-arrow-left"><line x1="19" y1="12" x2="5" y2="12"></line><polyline points="12 19 5 12 12 5"></polyline></svg>',
                "sNext": '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-arrow-right"><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg>'
            },
            "sInfo": "Showing page _PAGE_ of _PAGES_",
            "sSearch": '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-search"><circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line></svg>',
            "sSearchPlaceholder": "Search...",
            "sLengthMenu": "Results :  _MENU_",
        },
        "stripeClasses": [],
        "lengthMenu": [7, 10, 20, 50],
        "pageLength": 7
    });
</script>
<script>

    $(window).on('load', function () {
        prototypefabric.initCanvas();
        $('#create-polygon').click(function () {
            prototypefabric.polygon.drawPolygon();
        });
    });

    var min = 99;
    var max = 999999;
    var polygonMode = true;
    var pointArray = [];
    var lineArray = [];
    var activeLine;
    var activeShape = false;
    var polygon;
    var canvas;

    var prototypefabric = new function () {
        this.initCanvas = function () {
            canvas = window._canvas = new fabric.Canvas('cameraCanvas');
            //canvas.setWidth($(window).width());
            //canvas.setHeight($(window).height()-$('#nav-bar').height());
            //canvas.selection = false;
            //let bgImage = new Image();
            //bgImage.src = "../assets/img/camera.jpg";
            //canvas.setBackgroundColor({source: bgImage, repeat: 'repeat'})
            canvas.on('mouse:down', function (options) {
                if (options.target && options.target.id == pointArray[0].id) {
                    prototypefabric.polygon.generatePolygon(pointArray);
                }
                if (polygonMode) {
                    prototypefabric.polygon.addPoint(options);
                }
            });
            canvas.on('mouse:up', function (options) {

            });
            canvas.on('mouse:move', function (options) {
                if (activeLine && activeLine.class == "line") {
                    var pointer = canvas.getPointer(options.e);
                    activeLine.set({x2: pointer.x, y2: pointer.y});

                    var points = activeShape.get("points");
                    points[pointArray.length] = {
                        x: pointer.x,
                        y: pointer.y
                    }
                    activeShape.set({
                        points: points
                    });
                    canvas.renderAll();
                }
                canvas.renderAll();
            });
        };
    };

    prototypefabric.polygon = {
        drawPolygon: function () {
            polygonMode = true;
            pointArray = [];
            lineArray = [];
            activeLine;
        },
        addPoint: function (options) {
            var random = Math.floor(Math.random() * (max - min + 1)) + min;
            var id = new Date().getTime() + random;
            var circle = new fabric.Circle({
                radius: 5,
                fill: '#ffffff',
                stroke: '#333333',
                strokeWidth: 0.5,
                left: (options.e.layerX / canvas.getZoom()),
                top: (options.e.layerY / canvas.getZoom()),
                selectable: false,
                hasBorders: false,
                hasControls: false,
                originX: 'center',
                originY: 'center',
                id: id,
                objectCaching: false
            });
            if (pointArray.length == 0) {
                circle.set({
                    fill: 'red'
                })
            }
            var points = [(options.e.layerX / canvas.getZoom()), (options.e.layerY / canvas.getZoom()), (options.e.layerX / canvas.getZoom()), (options.e.layerY / canvas.getZoom())];
            line = new fabric.Line(points, {
                strokeWidth: 2,
                fill: '#999999',
                stroke: '#999999',
                class: 'line',
                originX: 'center',
                originY: 'center',
                selectable: false,
                hasBorders: false,
                hasControls: false,
                evented: false,
                objectCaching: false
            });
            if (activeShape) {
                var pos = canvas.getPointer(options.e);
                var points = activeShape.get("points");
                points.push({
                    x: pos.x,
                    y: pos.y
                });
                var polygon = new fabric.Polygon(points, {
                    stroke: '#333333',
                    strokeWidth: 1,
                    fill: '#cccccc',
                    opacity: 0.3,
                    selectable: false,
                    hasBorders: false,
                    hasControls: false,
                    evented: false,
                    objectCaching: false
                });
                canvas.remove(activeShape);
                canvas.add(polygon);
                activeShape = polygon;
                canvas.renderAll();
            } else {
                var polyPoint = [{x: (options.e.layerX / canvas.getZoom()), y: (options.e.layerY / canvas.getZoom())}];
                var polygon = new fabric.Polygon(polyPoint, {
                    stroke: '#333333',
                    strokeWidth: 1,
                    fill: '#cccccc',
                    opacity: 0.3,
                    selectable: false,
                    hasBorders: false,
                    hasControls: false,
                    evented: false,
                    objectCaching: false
                });
                activeShape = polygon;
                canvas.add(polygon);
            }
            activeLine = line;

            pointArray.push(circle);
            lineArray.push(line);

            canvas.add(line);
            canvas.add(circle);
            canvas.selection = false;
        },
        generatePolygon: function (pointArray) {
            var points = [];
            $.each(pointArray, function (index, point) {
                points.push({
                    x: point.left,
                    y: point.top
                });
                canvas.remove(point);
            });
            $.each(lineArray, function (index, line) {
                canvas.remove(line);
            });
            canvas.remove(activeShape).remove(activeLine);
            polygon = new fabric.Polygon(points, {
                stroke: '#333333',
                strokeWidth: 0.5,
                fill: 'red',
                opacity: 0.4,
                hasBorders: false,
                hasControls: false
            });
            canvas.add(polygon);
            $('#polygonPoints').text(JSON.stringify(points));
            activeLine = null;
            activeShape = null;
            polygonMode = false;
            canvas.selection = true;
        }
    };

    const fileSelector = document.getElementById('selectImage');
    fileSelector.addEventListener('change', (event) => {
        let files = event.target.files;
        if (files.length < 1) {
            alert('select a file...');
            return;
        }
        let file = files[0];
        let reader = new FileReader();
        reader.onload = function () {
            let bgImage = new Image();
            bgImage.src = reader.result;
            //bgImage.scaleToWidth(1024);
            canvas.setBackgroundColor({source: bgImage}, canvas.renderAll.bind(canvas));
        }
        reader.readAsDataURL(file);

    });

    function clearCanvas() {
        $('#polygonPoints').text('');
        polygonMode = true;
        pointArray = [];
        lineArray = [];
        activeShape = false;
        canvas.remove(polygon);
    }

</script>
<!-- END PAGE LEVEL CUSTOM SCRIPTS -->
</body>
</html>